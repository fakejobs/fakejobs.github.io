{"version":3,"sources":["configs/api.js","services/index.js","configs/env.js","../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js","pages/JobDetails.js"],"names":["module","exports","GET_FAKE_JOBS","GET_NEW_FAKE_JOBS","GET_FAKE_JOB","POST_FAKE_JOBS","GET_SEARCH_FAKE_JOBS_BY_EMAIL","api","axios","create","baseURL","getFakeJobsData","Promise","resolve","reject","get","API","then","res","data","catch","err","getFakeJobData","id","replace","getSearchFakeJobByEmail","email","postFakeJobsData","post","Row","Col","Title","Typography","Text","JobDetails","useState","setData","useParams","useEffect","document","title","Services","className","level","xs","sm","md","job_title","company_name","company_location","company_email","job_qualifications","span","dangerouslySetInnerHTML","__html","job_description","job_requirements","job_url","href"],"mappings":"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","file":"static/js/10.8e4b0634.chunk.js","sourcesContent":["module.exports = {\n  GET_FAKE_JOBS: 'fake-jobs-data?is_fake_job=true',\n  GET_NEW_FAKE_JOBS: 'fake-jobs-data?is_fake_job=true&_limit=10&_sort=published_at:DESC',\n  GET_FAKE_JOB: 'fake-jobs-data/{id}',\n  POST_FAKE_JOBS: 'fake-jobs-data',\n  GET_SEARCH_FAKE_JOBS_BY_EMAIL: 'fake-jobs-data/search/email/{email}'\n};","import axios from 'axios';\nimport { BASE_URL } from '../configs/env';\nimport API from '../configs/api';\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n});\n\nexport function getFakeJobsData(){\n  return new Promise((resolve, reject) => {\n    api.get(API.GET_NEW_FAKE_JOBS).then(res => {\n      resolve(res.data);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n}\n\nexport function getFakeJobData(id){\n  return new Promise((resolve, reject) => {\n    api.get(API.GET_FAKE_JOB.replace(/{(id)}/, id)).then(res => {\n      resolve(res.data);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n}\n\nexport function getSearchFakeJobByEmail(email){\n  return new Promise((resolve, reject) => {\n    api.get(API.GET_SEARCH_FAKE_JOBS_BY_EMAIL.replace(/{(email)}/, email)).then(res => {\n      resolve(res.data);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n}\n\nexport function postFakeJobsData(data) {\n  return new Promise((resolve, reject) => {\n    api.post(API.POST_FAKE_JOBS, data).then(res => {\n      resolve(res.data);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n}","// DEV ENV\n// export const BASE_URL = \"http://192.168.1.103:1337\";\n\n// PRD EV\nexport const BASE_URL = \"https://fakejobs-strapi-api.herokuapp.com\";","import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;","import { Typography, Row, Col, Skeleton } from 'antd';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as Services from '../services';\n\nconst { Title, Text } = Typography;\n\nexport default function JobDetails(){\n  const [data, setData] = useState(null);\n  let { id } = useParams();\n  \n\n  useEffect(() => {\n    document.title = \"Fakejobs - Detail Lowongan Palsu\";\n    Services.getFakeJobData(id).then(res => {\n      setData(res);\n    });\n  }, [])\n\n  return (\n    <div className=\"container-fluid\">\n      <Title level={3}>Job Detail</Title>\n      {data ?\n        <div>\n          <Row>\n            <Col xs={8} sm={8} md={6}>\n              <b>Judul Lowongan/Pekerjaan</b>\n            </Col>\n            <Col xs={16} sm={16} md={18}>\n              : {data.job_title}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={8} sm={8} md={6}>\n              <b>Nama Perusahaan</b>\n            </Col>\n            <Col xs={16} sm={16} md={18}>\n              : {data.company_name}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={8} sm={8} md={6}>\n              <b>Alamat Kantor/Perusahaan</b>\n            </Col>\n            <Col xs={16} sm={16} md={18}>\n              : {data.company_location}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={8} sm={8} md={6}>\n              <b>Email Perusahaan</b>\n            </Col>\n            <Col xs={16} sm={16} md={18}>\n              : {data.company_email}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={8} sm={8} md={6}>\n              <b>Kualifikasi Pendidikan</b>\n            </Col>\n            <Col xs={16} sm={16} md={18}>\n              : {data.job_qualifications}\n            </Col>\n          </Row>\n          <br/>\n          <Row>\n            <Col span={24}>\n              <b>Deskripsi Pekerjaan</b>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={24}>\n              <div dangerouslySetInnerHTML={{__html: data.job_description}}/>\n            </Col>\n          </Row>\n          <br/>\n          <Row>\n            <Col span={24}>\n              <b>Syarat Pekerjaan</b>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={24}>\n              <div dangerouslySetInnerHTML={{ __html: data.job_requirements }} />\n            </Col>\n          </Row>\n          <br/>\n          <Row>\n            <Col xs={8} sm={8} md={6}>\n              <b>Url Lowongan</b>\n            </Col>\n            <Col xs={16} sm={16} md={18}>\n              : {data.job_url !== null ? <a href={data.job_url}>Open</a> : 'Tidak ada'}\n            </Col>\n          </Row>\n        </div> : <Skeleton />\n      }\n    </div>\n  );\n}"],"sourceRoot":""}