{"version":3,"sources":["configs/api.js","services/index.js","configs/env.js","pages/Report.js"],"names":["module","exports","GET_FAKE_JOBS","GET_NEW_FAKE_JOBS","GET_FAKE_JOB","POST_FAKE_JOBS","GET_SEARCH_FAKE_JOBS","api","axios","create","baseURL","getFakeJobsData","Promise","resolve","reject","get","API","then","res","data","catch","err","getFakeJobData","id","replace","getSearchFakeJobs","keyword","postFakeJobsData","post","Option","Select","Report","useState","loading","setLoading","formRef","useRef","history","useHistory","useEffect","document","title","className","Title","Text","size","spinning","layout","ref","onFinish","Services","push","Item","label","name","rules","required","message","placeholder","value","extra","type","TextArea","htmlType"],"mappings":"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","file":"static/js/11.5905ca83.chunk.js","sourcesContent":["module.exports = {\n  GET_FAKE_JOBS: 'fake-jobs-data?is_fake_job=true',\n  GET_NEW_FAKE_JOBS: 'fake-jobs-data?is_fake_job=true&_limit=10&_sort=published_at:DESC',\n  GET_FAKE_JOB: 'fake-jobs-data/{id}',\n  POST_FAKE_JOBS: 'fake-jobs-data',\n  GET_SEARCH_FAKE_JOBS: 'fake-jobs-data/search/fakejobs/{keyword}'\n};","import axios from 'axios';\nimport { BASE_URL } from '../configs/env';\nimport API from '../configs/api';\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n});\n\nexport function getFakeJobsData(){\n  return new Promise((resolve, reject) => {\n    api.get(API.GET_NEW_FAKE_JOBS).then(res => {\n      resolve(res.data);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n}\n\nexport function getFakeJobData(id){\n  return new Promise((resolve, reject) => {\n    api.get(API.GET_FAKE_JOB.replace(/{(id)}/, id)).then(res => {\n      resolve(res.data);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n}\n\nexport function getSearchFakeJobs(keyword){\n  return new Promise((resolve, reject) => {\n    api.get(API.GET_SEARCH_FAKE_JOBS.replace(/{(keyword)}/, keyword)).then(res => {\n      resolve(res.data);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n}\n\nexport function postFakeJobsData(data) {\n  return new Promise((resolve, reject) => {\n    api.post(API.POST_FAKE_JOBS, data).then(res => {\n      resolve(res.data);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n}","// DEV ENV\n// export const BASE_URL = \"http://192.168.1.103:1337\";\n\n// PRD EV\nexport const BASE_URL = \"https://fakejobs-strapi-api.herokuapp.com\";","import { useState, useRef, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Input, Select, Button, Typography, Spin } from 'antd';\nimport * as Services from '../services';\nconst { Option } = Select;\n\nexport default function Report(){\n  const [loading, setLoading] = useState(false);\n  const formRef = useRef();\n  const history = useHistory();\n\n  useEffect(() => {\n    document.title = \"Fakejobs - Laporkan Lowongan Mencurigakan\";\n  }, []);\n\n  const postReport = (data) => {\n    setLoading(true);\n    Services.postFakeJobsData(data).then(() => {\n      return history.push('/report-success');\n    }).catch(() => {\n      return history.push('/report-failed');\n    })\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      <Typography.Title>Laporkan Lowongan Bodong</Typography.Title>\n      <Typography.Text>Silahkan isi form berikut, data yang kamu isi akan sangat membantu pencari kerja lain.</Typography.Text>\n      <br/><br/>\n      <Spin size=\"large\" spinning={loading}>\n        <Form\n          layout=\"vertical\"\n          ref={formRef}\n          onFinish={postReport}\n          size=\"medium\"\n        >\n          <Form.Item\n            label=\"Judul Lowongan\"\n            name=\"job_title\"\n            rules={[{ required: true, message: 'Tolong masukan judul lowongan!' }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Nama Perusahaan\"\n            name=\"company_name\"\n            rules={[{ required: true, message: 'Tolong masuka nama perusahaan!' }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Alamat Kantor/Interview\"\n            name=\"company_location\"\n            rules={[{ required: true, message: 'Tolong masukkan alamat kantor/interview' }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item name=\"job_qualifications\" label=\"Kualifikasi Pendidikan\" rules={[{ required: true, message: 'Tolong pilih kualifikasi pendidikan!' }]}>\n            <Select\n              placeholder=\"Pilih Kualifikasi Pendidikan\"\n            >\n              <Option value=\"All\">All</Option>\n              <Option value=\"S1\">S1</Option>\n              <Option value=\"S2\">S2</Option>\n              <Option value=\"S3\">S3</Option>\n              <Option value=\"SMA\">SMA/SMK/MA</Option>\n              <Option value=\"SMP\">SMP</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"Email Perusahaan\"\n            name=\"company_email\"\n            extra={<Typography.Text type=\"secondary\">Tolog isi jika kamu mendapatkan lowongan bodong dari email</Typography.Text>}\n          >\n            <Input type=\"email\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Url Lowongan\"\n            name=\"job_url\"\n            extra={<Typography.Text type=\"secondary\">Jika anda mendapatkan lowongan dari situs, silahkan lampirkan linknya</Typography.Text>}\n          >\n            <Input type=\"url\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Deskripsi Pekerjaan\"\n            name=\"job_description\"\n          >\n            <Input.TextArea />\n          </Form.Item>\n          <Form.Item\n            label=\"Syarat Pekerjaan\"\n            name=\"job_requirements\"\n          >\n            <Input.TextArea />\n          </Form.Item>\n          <Form.Item\n            label=\"Your Email\"\n            name=\"sender_email\"\n            extra={<Typography.Text type=\"secondary\">Kami akan menginfokan anda status lowongan bodong yang akan anda posting</Typography.Text>}\n            rules={[{ required: true, message: 'Please input your email!' }]}\n          >\n            <Input type=\"email\" />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Laporkan\n            </Button>\n          </Form.Item>\n        </Form>\n      </Spin>\n    </div>\n  )\n}"],"sourceRoot":""}